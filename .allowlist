# Ignore cython leftovers
.*.__reduce_cython__
.*.__setstate_cython__

# Even though runtime allows any arg and kwarg, they don't seem to have any effect
# so the stubs only reflect the 0-arg call
pyscipopt.scip.Column.__init__

# This doesn't work at runtime
pyscipopt(.scip)?.Expr.__next__

# stubtest thinks these accept *args while they don't
pyscipopt.scip.PowExpr.__init__
pyscipopt.scip.ProdExpr.__init__
pyscipopt.scip.SumExpr.__init__

# Stubs use enums whereas runtime has only ints
pyscipopt(.scip)?.Model.includeConshdlr
pyscipopt(.scip)?.Model.setupBendersSubproblem
pyscipopt(.scip)?.Model.includeHeur
pyscipopt(.scip)?.Model.includeProp
pyscipopt(.scip)?.Model.includePresol

# The Python base method used by stubtest does not have the same parameters
# as the one called from Cython - let's assume Cython is correct
pyscipopt(.scip)?.Prop.proppresol

# None of the methods in these classes work at runtime
# so they are not included in the stubs
pyscipopt(.scip)?.MatrixVariable.*
pyscipopt(.scip)?.MatrixConstraint.*
