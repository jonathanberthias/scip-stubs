[project]
name = "scip-stubs"
version = "5.3.0.0"
description = "Type annotations for PySCIPOpt"
readme = "README.md"
authors = [
    { name = "Jonathan Berthias", email = "jvberthias@gmail.com" }
]
requires-python = ">=3.8"

[project.optional-dependencies]
pyscipopt = [
    "pyscipopt>=5.3.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["pyscipopt"]

[dependency-groups]
dev = [
    "scip-stubs[pyscipopt]",
    "basedmypy[faster-cache]==2.9.1",
    "basedpyright==1.27.1",
]

[tool.pyright]
pythonVersion = "3.8"
typeCheckingMode = "basic"
enableTypeIgnoreComments = false
reportIgnoreCommentWithoutRule = true
reportIncompatibleMethodOverride = false
reportInvalidStubStatement = false
reportUnnecessaryTypeIgnoreComment = true
reportUnusedExpression = false
reportImplicitOverride = true

[tool.mypy]
disallow_any_explicit = false
disable_error_code = "comparison-overlap"

[tool.ruff]
show-fixes = true
[tool.ruff.lint]
extend-select = ["ALL"]
extend-ignore = [
    "COM812",
    "D",
    "FIX",
    "E501",
    "N817",  # CamelCase name imported as acronym
    "TD",
]
[tool.ruff.lint.per-file-ignores]
"pyscipopt/*.pyi" = [
    "A002",
    "ANN",  # temporary, until we fix the type annotations
    "ERA",
    "N",
    "PYI021", # let's keep the docstrings so that they show up in tooltips
]
"tests/*" = [
    "B015",  # pointless comparison
    "B018",  # useless expression
    "ERA",  # commented code
    "PLR0124", # name compared with itself
    "PLR2004", # magic value in comparison
]
"tool/*.py" = [
    "EM",
    "INP001",
    "S101",
    "T201",  # print statements
    "TRY003",
]
[tool.ruff.lint.isort]
split-on-trailing-comma = false
[tool.ruff.format]
skip-magic-trailing-comma = true
